<div class="login-box">
    <!-- /.login-logo -->
    <div class="card card-outline card-primary">
        <div class="card-header text-center">
            <a href="" class="h1"><b>Job</b>Hunter</a>
        </div>

        <div class="card-body">
            <form action="/user/login" method="POST" autocomplete="off">
                <div class="input-group mb-3">
                    <input
                        type="email"
                        class="form-control"
                        name="email"
                        placeholder="Email"
                    />
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <span class="fas fa-envelope"></span>
                        </div>
                    </div>
                </div>
                <div class="input-group mb-3">
                    <input
                        type="password"
                        class="form-control"
                        name="password"
                        placeholder="Password"
                    />
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <span class="fas fa-lock"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <!-- /.col -->
                    <div class="col-12">
                        <button
                            type="submit"
                            class="btn btn-primary btn-block submit"
                        >
                            Sign In
                        </button>
                        <!-- loader -->
                        <div class="loader text-center" style="display: none">
                            <i class="fas fa-sync-alt fa-spin"></i>
                        </div>
                    </div>
                    <!-- /.col -->
                </div>
            </form>
        </div>
        <!-- /.card-body -->
    </div>
    <!-- /.card -->
</div>
<!-- <script>
    const form = document.querySelector("form");
    const errorText = document.querySelector(".login-box-msg");

    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const email = form.email.value;
        const password = form.password.value;

        try {
            const res = await fetch("/loginUser", {
                method: "POST",
                body: JSON.stringify({ email, password }),
                headers: { "Content-Type": "application/json" },
            });

            const data = await res.json();

            if (data.status === "success") {
                Toastify({
                    text: data.message,
                    duration: 5000,
                    style: {
                        background:
                            "linear-gradient(to right, #00b09b, #96c93d)",
                    },
                }).showToast();
                setTimeout(() => {
                    location.assign("/dashboard");
                }, 1000);
            } else {
                Toastify({
                    text: data.message,
                    backgroundColor:
                        "linear-gradient(to right, #ff416c, #ff4b2b)",
                    duration: 5000,
                }).showToast();
            }
        } catch (error) {
            console.log(error);
        }
    });
</script> -->

<script>
    const form = document.querySelector("form");
    const errorText = document.querySelector(".login-box-msg");
    const loader = document.querySelector(".loader");
    const submitBtn = document.querySelector(".submit");

    async function login(email, password) {
        try {
            const res = await fetch("/loginUser", {
                method: "POST",
                body: JSON.stringify({ email, password }),
                headers: { "Content-Type": "application/json" },
            });

            const data = await res.json();
            return data;
        } catch (error) {
            Toastify({
                text: "Login failed. Please try again.",
                backgroundColor: "linear-gradient(to right, #ff416c, #ff4b2b)",
                duration: 5000,
            }).showToast();
        }
    }

    async function refreshAccessToken() {
        try {
            const refreshResponse = await fetch("/refreshToken", {
                method: "POST",
                credentials: "include", // Needed to include the cookie in the request to the API server
            });

            if (refreshResponse.ok) {
                const refreshData = await refreshResponse.json();
                return refreshData.accessToken;
            } else {
                throw new Error("Refresh token request failed");
            }
        } catch (error) {
            console.error("Error refreshing access token:", error);
            Toastify({
                text: "Error refreshing access token",
                backgroundColor: "linear-gradient(to right, #ff416c, #ff4b2b)",
                duration: 5000,
            }).showToast();
        }
    }

    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        loader.style.display = "block";
        submitBtn.classList.add("d-none");
        const email = form.email.value;
        const password = form.password.value;

        const loginData = await login(email, password);

        if (loginData.status === "success") {
            Toastify({
                text: loginData.message,
                duration: 1000,
                style: {
                    background: "linear-gradient(to right, #00b09b, #96c93d)",
                },
                callback: function () {
                    location.assign("/dashboard");
                },
            }).showToast();
            loader.style.display = "none";
            submitBtn.classList.remove("d-none");
        } else {
            if (loginData.message === "Access token expired") {
                // Try refreshing the access token
                const newAccessToken = await refreshAccessToken();
                if (newAccessToken) {
                    // Update the access token and retry the login
                    const retryLoginData = await login(email, password);
                    if (retryLoginData.status === "success") {
                        Toastify({
                            text: retryLoginData.message,
                            duration: 5000,
                            style: {
                                background:
                                    "linear-gradient(to right, #00b09b, #96c93d)",
                            },
                            callback: function () {
                                location.assign("/dashboard");
                            },
                        }).showToast();
                        loader.style.display = "none";
                        submitBtn.classList.remove("d-none");
                    } else {
                        Toastify({
                            text: retryLoginData.message,
                            backgroundColor:
                                "linear-gradient(to right, #ff416c, #ff4b2b)",
                            duration: 5000,
                        }).showToast();
                        loader.style.display = "none";
                        submitBtn.classList.remove("d-none");
                    }
                } else {
                    Toastify({
                        text: "Login failed. Please try again.",
                        backgroundColor:
                            "linear-gradient(to right, #ff416c, #ff4b2b)",
                        duration: 5000,
                    }).showToast();
                    loader.style.display = "none";
                    submitBtn.classList.remove("d-none");
                }
            } else {
                Toastify({
                    text: loginData.message,
                    backgroundColor:
                        "linear-gradient(to right, #ff416c, #ff4b2b)",
                    duration: 5000,
                }).showToast();

                loader.style.display = "none";
                submitBtn.classList.remove("d-none");
            }
        }
    });
</script>
